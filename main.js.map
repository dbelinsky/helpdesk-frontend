{"version":3,"file":"main.js","mappings":"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","sources":["webpack://cards/./src/js/app.js","webpack://cards/./src/js/formatedDate.js"],"sourcesContent":["/* eslint-disable no-use-before-define */\n/* eslint-disable no-param-reassign */\n\nimport { formatedDate } from './formatedDate';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const ticketList = document.querySelector('.ticket__container');\n  const addTicketBtn = document.querySelector('.add__btn-ticket');\n  const ticketModal = document.querySelector('.ticket__modal');\n  const deleteModal = document.querySelector('.delete__modal');\n  const closeButtons = document.querySelectorAll('.close__btn');\n  const ticketForm = document.querySelector('.ticket__form');\n  const confirmDeleteBtn = document.querySelector('.confirm__DeleteBtn');\n  const cancelDeleteBtn = document.querySelector('.cancel__DeleteBtn');\n  const loadingIcon = document.querySelector('.loading__icon');\n\n  let currentTicketId = null;\n\n  const apiUrl = 'https://helpdesk-backend-ef4y.onrender.com/api';\n\n  function fetchTickets() {\n    fetch(`${apiUrl}?method=allTickets`)\n      .then((response) => response.json())\n      .then(renderTickets);\n  }\n\n  // Функция для отрисовки списка тикетов\n  function renderTickets(tickets) {\n    ticketList.innerHTML = '';\n    showLoadingIcon();\n    tickets.forEach((ticket) => {\n      const date = new Date(ticket.created);\n      const formattedDate = formatedDate(date);\n      const listItem = document.createElement('li');\n      listItem.dataset.id = ticket.id;\n      listItem.innerHTML = `\n          <div class=\"ticket\" data-id=\"${ticket.id}\">\n            <input type=\"checkbox\" class=\"ticket__checkbox\" ${ticket.status ? 'checked' : ''}>\n            <div class=\"body__ticket\">\n              <h3>${ticket.name}</h3>\n              <span>${formattedDate}</span>\n            </div>\n\n            <div class=\"btns\">\n              <button class=\"edit__Btn\"> &#9998; </button>\n              <button class=\"delete__Btn\"> &#10006; </button>\n            </div>\n\n            <div class=\"show__description\">\n              <p></p>\n            </div>\n          </div>\n        `;\n\n      const checkbox = listItem.querySelector('.ticket__checkbox');\n      if (checkbox) {\n        checkbox.addEventListener('click', (e) => {\n          e.stopPropagation();\n          toggleTicketStatus(ticket.id);\n        });\n      }\n\n      const editBtn = listItem.querySelector('.edit__Btn');\n      if (editBtn) {\n        editBtn.addEventListener('click', (e) => {\n          e.stopPropagation();\n          openEditModal(ticket.id);\n        });\n      }\n\n      const deleteBtn = listItem.querySelector('.delete__Btn');\n      if (deleteBtn) {\n        deleteBtn.addEventListener('click', (e) => {\n          e.stopPropagation();\n          openDeleteModal(ticket.id);\n        });\n      }\n\n      const bodyTicket = listItem.querySelector('.body__ticket');\n      if (bodyTicket) {\n        bodyTicket.addEventListener('click', () => {\n          showTicketDetails(ticket.id);\n        });\n      }\n      ticketList.appendChild(listItem);\n    });\n    hideLoadingIcon();\n  }\n\n  // Функция для отображения подробностей тикета и показа описания\n  function showTicketDetails(id) {\n    fetch(`${apiUrl}?method=ticketById&id=${id}`)\n      .then((response) => response.json())\n      .then((ticket) => {\n        const ticketElement = document.querySelector(`.ticket[data-id=\"${ticket.id}\"]`);\n        const showDescriptionElement = ticketElement.querySelector('.show__description');\n\n        if (ticketElement.classList.contains('ticket__show')) {\n          showDescriptionElement.style.display = 'none';\n          ticketElement.classList.remove('ticket__show');\n        } else {\n          showDescriptionElement.querySelector('p').textContent = ticket.description;\n          showDescriptionElement.style.display = 'block';\n          ticketElement.classList.add('ticket__show');\n        }\n      // eslint-disable-next-line no-console\n      }).catch((error) => console.error('Error fetching ticket details:', error));\n  }\n\n  function openEditModal(id) {\n    fetch(`${apiUrl}?method=ticketById&id=${id}`)\n      .then((response) => response.json())\n      .then((ticket) => {\n        currentTicketId = id;\n        ticketModal.querySelector('.modal__title').innerText = 'Изменить тикет';\n        ticketForm.querySelector('.ticket__id').value = ticket.id;\n        ticketForm.querySelector('.input__text').value = ticket.name;\n        ticketForm.querySelector('.textarea__description').value = ticket.description;\n        ticketModal.style.display = 'block';\n      });\n  }\n\n  function openDeleteModal(id) {\n    currentTicketId = id;\n    deleteModal.style.display = 'block';\n  }\n\n  // Функция для переключения статуса тикета\n  function toggleTicketStatus(id) {\n    fetch(`${apiUrl}?method=ticketById&id=${id}`)\n      .then((response) => response.json())\n      .then((ticket) => {\n        ticket.status = !ticket.status;\n\n        return fetch(`${apiUrl}?method=updateById&id=${id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(ticket),\n        });\n      })\n      .then(fetchTickets);\n  }\n\n  function saveTicket(e) {\n    e.preventDefault();\n    const id = ticketForm.querySelector('.ticket__id').value;\n    const name = ticketForm.querySelector('.input__text').value;\n    const description = ticketForm.querySelector('.textarea__description').value;\n    const method = id ? 'updateById' : 'createTicket';\n    const url = id ? `${apiUrl}?method=${method}&id=${id}` : `${apiUrl}?method=${method}`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        description,\n      }),\n    })\n      .then(() => {\n        ticketModal.style.display = 'none';\n        fetchTickets();\n      });\n  }\n\n  function confirmDelete() {\n    fetch(`${apiUrl}?method=deleteById&id=${currentTicketId}`, {\n      method: 'GET',\n    })\n      .then(() => {\n        deleteModal.style.display = 'none';\n        fetchTickets();\n      });\n  }\n\n  function closeModal() {\n    ticketModal.style.display = 'none';\n    deleteModal.style.display = 'none';\n  }\n\n  closeButtons.forEach((button) => {\n    button.addEventListener('click', closeModal);\n  });\n\n  addTicketBtn.addEventListener('click', () => {\n    ticketModal.querySelector('.modal__title').innerText = 'Добавить тикет';\n    ticketForm.reset();\n    ticketForm.querySelector('.ticket__id').value = '';\n    ticketModal.style.display = 'block';\n  });\n\n  function showLoadingIcon() {\n    loadingIcon.style.display = 'block';\n  }\n\n  function hideLoadingIcon() {\n    loadingIcon.style.display = 'none';\n  }\n\n  ticketForm.addEventListener('submit', saveTicket);\n\n  confirmDeleteBtn.addEventListener('click', confirmDelete);\n  cancelDeleteBtn.addEventListener('click', closeModal);\n\n  fetchTickets();\n});","// eslint-disable-next-line import/prefer-default-export\nexport function formatedDate(date) {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = String(date.getFullYear()).slice(-2); // Последние две цифры года\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n  \n    return `${day}.${month}.${year} ${hours}:${minutes}`;\n  }"],"names":["document","addEventListener","ticketList","querySelector","addTicketBtn","ticketModal","deleteModal","closeButtons","querySelectorAll","ticketForm","confirmDeleteBtn","cancelDeleteBtn","loadingIcon","currentTicketId","apiUrl","fetchTickets","fetch","then","response","json","renderTickets","tickets","innerHTML","style","display","forEach","ticket","formattedDate","date","Date","created","String","getDate","padStart","getMonth","getFullYear","slice","getHours","getMinutes","listItem","createElement","dataset","id","status","name","checkbox","e","stopPropagation","method","headers","body","JSON","stringify","editBtn","innerText","value","description","deleteBtn","bodyTicket","ticketElement","showDescriptionElement","classList","contains","remove","textContent","add","catch","error","console","appendChild","closeModal","button","reset","preventDefault"],"sourceRoot":""}